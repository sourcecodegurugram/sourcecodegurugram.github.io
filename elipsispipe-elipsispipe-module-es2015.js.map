{"version":3,"sources":["./src/app/elipsispipe/elipsispipe.page.html","./src/app/elipsispipe/elipsispipe-routing.module.ts","./src/app/elipsispipe/elipsispipe.module.ts","./src/app/elipsispipe/elipsispipe.page.scss","./src/app/elipsispipe/elipsispipe.page.ts"],"names":[],"mappings":"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","file":"elipsispipe-elipsispipe-module-es2015.js","sourcesContent":["export default \"\\n<ion-header [translucent]=\\\"true\\\">\\n \\n  <ion-toolbar color=\\\"warning\\\">\\n    <ion-button (click)=\\\"loadMap()\\\" shape=\\\"round\\\" color=\\\"dark\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"locate\\\"></ion-icon>\\n      Where I Am\\n    </ion-button>\\n    <ion-title slot=\\\"end\\\">Google Map</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-header [translucent]=\\\"true\\\">\\n \\n  <ion-toolbar color=\\\"warning\\\">\\n    <ion-button (click)=\\\"loadMap()\\\" shape=\\\"round\\\" color=\\\"dark\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"locate\\\"></ion-icon>\\n      Where I Am\\n    </ion-button>\\n    <ion-title slot=\\\"end\\\">Google Map</ion-title>\\n  </ion-toolbar>\\n \\n</ion-header>\\n \\n<ion-content [fullscreen]=\\\"true\\\">\\n \\n  <div class=\\\"map-wrapper\\\">\\n    <div id=\\\"map_center\\\">\\n      <img src=\\\"../../assets/Images/ionicon.png\\\" />\\n    </div>\\n    <div #map id=\\\"map\\\"></div>\\n  </div>\\n \\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Lattitude</b>\\n      </ion-col>\\n      <ion-col>\\n        {{latitude}}\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Longitude</b>\\n      </ion-col>\\n      <ion-col>\\n        {{longitude}}\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Address</b>\\n      </ion-col>\\n      <ion-col>\\n        {{address}}\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n \\n \\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ElipsispipePage } from './elipsispipe.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ElipsispipePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ElipsispipePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ElipsispipePageRoutingModule } from './elipsispipe-routing.module';\n\nimport { ElipsispipePage } from './elipsispipe.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ElipsispipePageRoutingModule\n  ],\n  declarations: [ElipsispipePage]\n})\nexport class ElipsispipePageModule {}\n","export default \"#map_canvas {\\n  width: 90%;\\n  height: 80%;\\n  border: 1px solid red;\\n}\\n\\n#address {\\n  padding: 10px;\\n  font-size: 18px;\\n  font-weight: bold;\\n}\\n\\n#map {\\n  width: 100%;\\n  height: 70vh;\\n}\\n\\n.map-wrapper {\\n  position: relative;\\n}\\n\\n.map-wrapper #map_center {\\n  position: absolute;\\n  z-index: 99;\\n  height: 40px;\\n  width: 40px;\\n  top: 50%;\\n  left: 50%;\\n  margin-left: -21px;\\n  margin-top: -41px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9tZWRpYS9nb2QvTWFpbiBEYXRhL0FuZ3VsYXIgUHJvamVjdC9ub3Q0RGF0aW5nL3NyYy9hcHAvZWxpcHNpc3BpcGUvZWxpcHNpc3BpcGUucGFnZS5zY3NzIiwic3JjL2FwcC9lbGlwc2lzcGlwZS9lbGlwc2lzcGlwZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxVQUFBO0VBQ0EsV0FBQTtFQUNBLHFCQUFBO0FDQ0o7O0FER0U7RUFDRSxhQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FDQUo7O0FER0U7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQ0FKOztBREdFO0VBQ0Usa0JBQUE7QUNBSjs7QURFSTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0FDQU4iLCJmaWxlIjoic3JjL2FwcC9lbGlwc2lzcGlwZS9lbGlwc2lzcGlwZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbWFwX2NhbnZhcyB7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgaGVpZ2h0OiA4MCU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XHJcbiAgfVxyXG4gICBcclxuICAgXHJcbiAgI2FkZHJlc3Mge1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICAgXHJcbiAgI21hcCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNzB2aDtcclxuICB9XHJcbiAgIFxyXG4gIC5tYXAtd3JhcHBlciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgIFxyXG4gICAgI21hcF9jZW50ZXIge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHotaW5kZXg6IDk5O1xyXG4gICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICB0b3A6IDUwJTtcclxuICAgICAgbGVmdDogNTAlO1xyXG4gICAgICBtYXJnaW4tbGVmdDogLTIxcHg7XHJcbiAgICAgIG1hcmdpbi10b3A6IC00MXB4O1xyXG4gICAgfVxyXG4gIH0iLCIjbWFwX2NhbnZhcyB7XG4gIHdpZHRoOiA5MCU7XG4gIGhlaWdodDogODAlO1xuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG59XG5cbiNhZGRyZXNzIHtcbiAgcGFkZGluZzogMTBweDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuI21hcCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDcwdmg7XG59XG5cbi5tYXAtd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5tYXAtd3JhcHBlciAjbWFwX2NlbnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogOTk7XG4gIGhlaWdodDogNDBweDtcbiAgd2lkdGg6IDQwcHg7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIG1hcmdpbi1sZWZ0OiAtMjFweDtcbiAgbWFyZ2luLXRvcDogLTQxcHg7XG59Il19 */\"","import { Component, OnInit,ViewChild, ElementRef } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\ndeclare var google;\n@Component({\n  selector: 'app-elipsispipe',\n  templateUrl: './elipsispipe.page.html',\n  styleUrls: ['./elipsispipe.page.scss'],\n})\nexport class ElipsispipePage implements OnInit {\n  @ViewChild('map', { static: false }) mapElement: ElementRef;\n  map: any;\n  address: string;\n \n  latitude: number;\n  longitude: number;\n  constructor(\n    private geolocation: Geolocation,\n    private nativeGeocoder: NativeGeocoder\n  ) { }\n\n  ngOnInit() {\n    this.loadMap();\n    \n  }\n  loadMap() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n \n      this.latitude = resp.coords.latitude;\n      this.longitude = resp.coords.longitude;\n \n      let latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n      let mapOptions = {\n        center: latLng,\n        zoom: 15,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      }\n \n      this.getAddressFromCoords(resp.coords.latitude, resp.coords.longitude);\n \n      this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n \n      this.map.addListener('dragend', () => {\n \n        this.latitude = this.map.center.lat();\n        this.longitude = this.map.center.lng();\n \n        this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng())\n      });\n \n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n  }\n \n  getAddressFromCoords(lattitude, longitude) {\n    console.log(\"getAddressFromCoords \" + lattitude + \" \" + longitude);\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n \n    this.nativeGeocoder.reverseGeocode(lattitude, longitude, options)\n      .then((result: NativeGeocoderResult[]) => {\n        this.address = \"\";\n        let responseAddress = [];\n        for (let [key, value] of Object.entries(result[0])) {\n          if (value.length > 0)\n            responseAddress.push(value);\n \n        }\n        responseAddress.reverse();\n        for (let value of responseAddress) {\n          this.address += value + \", \";\n        }\n        this.address = this.address.slice(0, -2);\n       \n      })\n      .catch((error: any) => {\n        this.address = \"Address Not Available!\";\n      });\n \n  }\n}\n"],"sourceRoot":"webpack:///"}